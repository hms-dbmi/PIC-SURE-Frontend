{"version":3,"file":"hooks.server-BbZBc7-r.js","sources":["../../../.svelte-kit/adapter-node/chunks/hooks.server.js"],"sourcesContent":["import { r as registerProviderData } from \"./AuthProviderRegistry.js\";\nconst __vite_import_meta_env__ = { \"BASE_URL\": \"/\", \"DEV\": false, \"MODE\": \"production\", \"PROD\": true, \"SSR\": true, \"VITE_ALLOW_DOWNLOAD\": \"true\", \"VITE_ALLOW_EXPORT\": \"true\", \"VITE_ALLOW_EXPORT_ENABLED\": \"null\", \"VITE_API\": \"true\", \"VITE_AUTH0_TENANT\": \"avillachlab\", \"VITE_AUTH_PROVIDER_MODULE_GOOGLE\": \"true\", \"VITE_AUTH_PROVIDER_MODULE_GOOGLE_CLIENTID\": \"dFvo72bRvFWuUIgaR1hLKjz4I0o8fDcK\", \"VITE_AUTH_PROVIDER_MODULE_GOOGLE_CONNECTION\": \"google-oauth2\", \"VITE_AUTH_PROVIDER_MODULE_GOOGLE_DESCRIPTION\": \"Login\", \"VITE_AUTH_PROVIDER_MODULE_GOOGLE_TYPE\": \"AUTH0\", \"VITE_DASHBOARD\": \"true\", \"VITE_DATA_REQUESTS\": \"false\", \"VITE_DISCOVER\": \"false\", \"VITE_DIST_EXPLORER\": \"true\", \"VITE_DOWNLOAD_AS_CSV\": \"true\", \"VITE_DOWNLOAD_AS_PFB\": \"true\", \"VITE_ENABLE_GENE_QUERY\": \"true\", \"VITE_ENABLE_SNP_QUERY\": \"true\", \"VITE_ENABLE_TOS\": \"false\", \"VITE_EXPLORER_MAX_COUNT\": \"10000\", \"VITE_GOOGLE_ANALYTICS_ID\": \"\", \"VITE_GOOGLE_TAG_MANAGER_ID\": \"\", \"VITE_LOGO\": \"\", \"VITE_OPEN\": \"false\", \"VITE_ORIGIN\": \"\", \"VITE_PROJECT_HOSTNAME\": \"\", \"VITE_REQUIRE_CONSENTS\": \"false\", \"VITE_RESOURCE_BASE_QUERY\": \"\", \"VITE_RESOURCE_HPDS\": \"1ba180cb-b934-487f-89ad-7dc77c1c0238\", \"VITE_RESOURCE_OPEN_HPDS\": \"1ba180cb-b934-487f-89ad-7dc77c1c0238\", \"VITE_RESOURCE_VIZ\": \"\", \"VITE_SHOW_VARIABLE_EXPORT\": \"true\", \"VITE_SHOW_VARIABLE_HIERARCHY\": \"true\", \"VITE_TOUR\": \"true\", \"VITE_TOUR_SEARCH_TERM\": \"age\", \"VITE_USE_QUERY_TEMPLATE\": \"false\", \"VITE_VARIANT_EXPLORER\": \"false\", \"VITE_VARIANT_EXPLORER_EXCLUDE_COLUMNS\": \"\", \"VITE_VARIANT_EXPLORER_TYPE\": \"aggregate\" };\nconst PROVIDER_PREFIX = \"VITE_AUTH_PROVIDER_MODULE_\";\nconst enabledProviders = Object.keys(__vite_import_meta_env__).filter((key) => key.startsWith(PROVIDER_PREFIX) && __vite_import_meta_env__[key] === \"true\").map((key) => key.replace(PROVIDER_PREFIX, \"\").toUpperCase()).filter((key) => !key.includes(\"_\"));\nasync function registerEnabledProviders(enabledProviders2, viteProviderPrefix) {\n  for (const providerName of enabledProviders2) {\n    const uppercaseProviderName = providerName.toUpperCase();\n    const providerConfigPrefix = `${viteProviderPrefix}${uppercaseProviderName}_`;\n    try {\n      const authProviderConfigInterface = {};\n      Object.keys(__vite_import_meta_env__).filter((key) => key.startsWith(providerConfigPrefix)).map((key) => {\n        const configKey = key.replace(providerConfigPrefix, \"\")?.toLowerCase();\n        const value = __vite_import_meta_env__[key] === \"true\" ? true : __vite_import_meta_env__[key] === \"false\" ? false : __vite_import_meta_env__[key];\n        authProviderConfigInterface[configKey] = value;\n      });\n      authProviderConfigInterface.enabled = true;\n      authProviderConfigInterface.name = uppercaseProviderName;\n      registerProviderData(authProviderConfigInterface);\n    } catch (error) {\n      console.error(`Error registering auth provider \"${uppercaseProviderName}\":`, error);\n    }\n  }\n}\nregisterEnabledProviders(enabledProviders, PROVIDER_PREFIX);\nconst handleError = async ({ error, event, status, message }) => {\n  console.error(\"Server error: \", error, event, status, message);\n  return {\n    message: message || \"An unknown server error occurred.\"\n  };\n};\nexport {\n  handleError\n};\n"],"names":[],"mappings":"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"}