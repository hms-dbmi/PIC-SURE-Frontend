{"version":3,"file":"dictionary-DTJwdnk5.js","sources":["../../../.svelte-kit/adapter-node/chunks/dictionary.js"],"sourcesContent":["import { p as post, u as user } from \"./User.js\";\nimport { p as page } from \"./stores3.js\";\nimport { w as writable } from \"./index2.js\";\nimport { g as get_store_value } from \"./lifecycle.js\";\nconst dictionaryUrl = \"picsure/proxy/dictionary-api/\";\nconst searchUrl = \"picsure/proxy/dictionary-api/concepts\";\nconst hiddenFacets = writable({});\nfunction searchDictionary(searchTerm = \"\", facets, pageable) {\n  let request = { facets, search: searchTerm };\n  if (!get_store_value(page).url.pathname.includes(\"/discover\")) {\n    request = addConsents(request);\n  }\n  return post(\n    `${searchUrl}?page_number=${pageable.pageNumber}&page_size=${pageable.pageSize}`,\n    request\n  );\n}\nfunction addConsents(request) {\n  const queryTemplate = get_store_value(user)?.queryTemplate;\n  if (queryTemplate) {\n    const filters = queryTemplate.categoryFilters;\n    const consents = filters[\"\\\\_consents\\\\\"];\n    request.consents = consents;\n  }\n  return request;\n}\nasync function getConceptCount(isOpenAccess = false) {\n  let request = { facets: [], search: \"\", consents: [] };\n  if (!isOpenAccess) {\n    request = addConsents(request);\n  }\n  const res = await post(`${searchUrl}?page_number=1&page_size=1`, request);\n  return res.totalElements;\n}\nasync function getStudiesCount(isOpenAccess = false) {\n  let request = { facets: [], search: \"\", consents: [] };\n  if (!isOpenAccess) {\n    request = addConsents(request);\n  }\n  const res = await post(`${dictionaryUrl}facets/`, request);\n  const facetCat = res.find((facetCat2) => facetCat2.name === \"dataset_id\");\n  if (!facetCat) {\n    return 0;\n  }\n  if (isOpenAccess) {\n    return facetCat.facets.length;\n  }\n  const facetsForUser = facetCat.facets.filter((facet) => facet.count > 0);\n  return facetsForUser.length;\n}\nexport {\n  getConceptCount as a,\n  getStudiesCount as g,\n  hiddenFacets as h,\n  searchDictionary as s\n};\n"],"names":[],"mappings":";;;;;AAIA,MAAM,aAAa,GAAG,+BAA+B;AACrD,MAAM,SAAS,GAAG,uCAAuC;AACpD,MAAC,YAAY,GAAG,QAAQ,CAAC,EAAE;AAChC,SAAS,gBAAgB,CAAC,UAAU,GAAG,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC7D,EAAE,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE;AAC9C,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;AACjE,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC;AACA,EAAE,OAAO,IAAI;AACb,IAAI,CAAC,EAAE,SAAS,CAAC,aAAa,EAAE,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACpF,IAAI;AACJ,GAAG;AACH;AACA,SAAS,WAAW,CAAC,OAAO,EAAE;AAC9B,EAAE,MAAM,aAAa,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,aAAa;AAC5D,EAAE,IAAI,aAAa,EAAE;AACrB,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,eAAe;AACjD,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC;AAC7C,IAAI,OAAO,CAAC,QAAQ,GAAG,QAAQ;AAC/B;AACA,EAAE,OAAO,OAAO;AAChB;AACA,eAAe,eAAe,CAAC,YAAY,GAAG,KAAK,EAAE;AACrD,EAAE,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;AACxD,EAAE,IAAI,CAAC,YAAY,EAAE;AACrB,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC;AACA,EAAE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,0BAA0B,CAAC,EAAE,OAAO,CAAC;AAC3E,EAAE,OAAO,GAAG,CAAC,aAAa;AAC1B;AACA,eAAe,eAAe,CAAC,YAAY,GAAG,KAAK,EAAE;AACrD,EAAE,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;AACxD,EAAE,IAAI,CAAC,YAAY,EAAE;AACrB,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC;AACA,EAAE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,EAAE,aAAa,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;AAC5D,EAAE,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,KAAK,YAAY,CAAC;AAC3E,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,CAAC;AACZ;AACA,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,MAAM;AACjC;AACA,EAAE,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAC1E,EAAE,OAAO,aAAa,CAAC,MAAM;AAC7B;;;;"}