{"version":3,"file":"RoleForm-C3YXCUV6.js","sources":["../../../.svelte-kit/adapter-node/chunks/RoleForm.js"],"sourcesContent":["import { c as create_ssr_component, a as add_attribute, f as each, e as escape } from \"./ssr.js\";\nimport \"./client.js\";\nimport { g as getToastStore } from \"./stores2.js\";\nimport \"./ProgressBar.svelte_svelte_type_style_lang.js\";\nimport { t as textInput } from \"./Validation.js\";\nimport \"./Roles.js\";\nconst css = {\n  code: \"label.svelte-1hg36ee.svelte-1hg36ee,fieldset.svelte-1hg36ee.svelte-1hg36ee{margin:0.5em 0}fieldset.svelte-1hg36ee label.svelte-1hg36ee{margin:0}\",\n  map: '{\"version\":3,\"file\":\"RoleForm.svelte\",\"sources\":[\"RoleForm.svelte\"],\"sourcesContent\":[\"<script lang=\\\\\"ts\\\\\">import { goto } from \\\\\"$app/navigation\\\\\";\\\\nimport { getToastStore } from \\\\\"@skeletonlabs/skeleton\\\\\";\\\\nconst toastStore = getToastStore();\\\\nimport { textInput } from \\\\\"$lib/utilities/Validation\\\\\";\\\\nimport {} from \\\\\"$lib/models/Role\\\\\";\\\\nimport RolesStore from \\\\\"$lib/stores/Roles\\\\\";\\\\nconst { addRole, updateRole } = RolesStore;\\\\nexport let role = void 0;\\\\nexport let privilegeList;\\\\nlet name = role ? role.name : \\\\\"\\\\\";\\\\nlet description = role ? role.description : \\\\\"\\\\\";\\\\nlet privileges = privilegeList.map(([_name, uuid]) => ({\\\\n  uuid,\\\\n  checked: role ? role.privileges.includes(uuid) : false\\\\n}));\\\\nasync function saveRole() {\\\\n  let newRole = {\\\\n    name,\\\\n    description,\\\\n    privileges: privileges.filter((priv) => priv.checked).map((priv) => priv.uuid)\\\\n  };\\\\n  try {\\\\n    if (role) {\\\\n      newRole = { ...newRole, uuid: role.uuid };\\\\n      await updateRole(newRole);\\\\n    } else {\\\\n      await addRole(newRole);\\\\n    }\\\\n    toastStore.trigger({\\\\n      message: `Successfully saved ${newRole ? \\\\\"new role\\\\\" : \\\\\"role\\\\\"} \\'${name}\\'`,\\\\n      background: \\\\\"variant-filled-success\\\\\"\\\\n    });\\\\n    goto(\\\\\"/admin/authorization\\\\\");\\\\n  } catch (error) {\\\\n    console.error(error);\\\\n    toastStore.trigger({\\\\n      message: `An error occured while saving ${newRole ? \\\\\"new role\\\\\" : \\\\\"role\\\\\"} \\'${name}\\'`,\\\\n      background: \\\\\"variant-filled-error\\\\\"\\\\n    });\\\\n  }\\\\n}\\\\n<\\/script>\\\\n\\\\n<form on:submit|preventDefault={saveRole}>\\\\n  <label class=\\\\\"label required\\\\\">\\\\n    <span>Name:</span>\\\\n    <input\\\\n      type=\\\\\"text\\\\\"\\\\n      bind:value={name}\\\\n      class=\\\\\"input\\\\\"\\\\n      required\\\\n      pattern={textInput}\\\\n      minlength=\\\\\"1\\\\\"\\\\n      maxlength=\\\\\"255\\\\\"\\\\n    />\\\\n  </label>\\\\n\\\\n  <label class=\\\\\"label required\\\\\">\\\\n    <span>Description:</span>\\\\n    <input\\\\n      type=\\\\\"text\\\\\"\\\\n      bind:value={description}\\\\n      class=\\\\\"input\\\\\"\\\\n      required\\\\n      pattern={textInput}\\\\n      minlength=\\\\\"1\\\\\"\\\\n      maxlength=\\\\\"255\\\\\"\\\\n    />\\\\n  </label>\\\\n\\\\n  <fieldset data-testid=\\\\\"privilege-checkboxes\\\\\">\\\\n    <legend>Privileges:</legend>\\\\n    {#each privilegeList as [name], index}\\\\n      <label class=\\\\\"flex items-center space-x-2\\\\\">\\\\n        <input class=\\\\\"checkbox\\\\\" type=\\\\\"checkbox\\\\\" bind:checked={privileges[index].checked} />\\\\n        <p>{name}</p>\\\\n      </label>\\\\n    {/each}\\\\n  </fieldset>\\\\n\\\\n  <button type=\\\\\"submit\\\\\" class=\\\\\"btn variant-ghost-primary hover:variant-filled-primary\\\\\">\\\\n    Save\\\\n  </button>\\\\n  <a href=\\\\\"/admin/authorization\\\\\" class=\\\\\"btn variant-ghost-secondary hover:variant-filled-secondary\\\\\">\\\\n    Cancel\\\\n  </a>\\\\n</form>\\\\n\\\\n<style>\\\\n  label,\\\\n  fieldset {\\\\n    margin: 0.5em 0;\\\\n  }\\\\n  fieldset label {\\\\n    margin: 0;\\\\n  }</style>\\\\n\"],\"names\":[],\"mappings\":\"AAyFE,mCAAK,CACL,sCAAS,CACP,MAAM,CAAE,KAAK,CAAC,CAChB,CACA,uBAAQ,CAAC,oBAAM,CACb,MAAM,CAAE,CACV\"}'\n};\nconst RoleForm = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  getToastStore();\n  let { role = void 0 } = $$props;\n  let { privilegeList } = $$props;\n  let name = role ? role.name : \"\";\n  let description = role ? role.description : \"\";\n  let privileges = privilegeList.map(([_name, uuid]) => ({\n    uuid,\n    checked: role ? role.privileges.includes(uuid) : false\n  }));\n  if ($$props.role === void 0 && $$bindings.role && role !== void 0) $$bindings.role(role);\n  if ($$props.privilegeList === void 0 && $$bindings.privilegeList && privilegeList !== void 0) $$bindings.privilegeList(privilegeList);\n  $$result.css.add(css);\n  return `<form><label class=\"label required svelte-1hg36ee\"><span data-svelte-h=\"svelte-m2peuz\">Name:</span> <input type=\"text\" class=\"input\" required${add_attribute(\"pattern\", textInput, 0)} minlength=\"1\" maxlength=\"255\"${add_attribute(\"value\", name, 0)}></label> <label class=\"label required svelte-1hg36ee\"><span data-svelte-h=\"svelte-n5lbfe\">Description:</span> <input type=\"text\" class=\"input\" required${add_attribute(\"pattern\", textInput, 0)} minlength=\"1\" maxlength=\"255\"${add_attribute(\"value\", description, 0)}></label> <fieldset data-testid=\"privilege-checkboxes\" class=\"svelte-1hg36ee\"><legend data-svelte-h=\"svelte-k8qk28\">Privileges:</legend> ${each(privilegeList, ([name2], index) => {\n    return `<label class=\"flex items-center space-x-2 svelte-1hg36ee\"><input class=\"checkbox\" type=\"checkbox\"${add_attribute(\"checked\", privileges[index].checked, 1)}> <p>${escape(name2)}</p> </label>`;\n  })}</fieldset> <button type=\"submit\" class=\"btn variant-ghost-primary hover:variant-filled-primary\" data-svelte-h=\"svelte-uo67us\">Save</button> <a href=\"/admin/authorization\" class=\"btn variant-ghost-secondary hover:variant-filled-secondary\" data-svelte-h=\"svelte-muwtns\">Cancel</a> </form>`;\n});\nexport {\n  RoleForm as R\n};\n"],"names":[],"mappings":";;;;;;;AAMA,MAAM,GAAG,GAAG;AACZ,EAAE,IAAI,EAAE,kJAAkJ;AAC1J,EAAE,GAAG,EAAE;AACP,CAAC;AACI,MAAC,QAAQ,GAAG,oBAAoB,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,KAAK;AAChF,EAAE,aAAa,EAAE;AACjB,EAAE,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,GAAG,OAAO;AACjC,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,OAAO;AACjC,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;AAClC,EAAE,IAAI,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE;AAChD,EAAE,IAAI,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;AACzD,IAAI,IAAI;AACR,IAAI,OAAO,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG;AACrD,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1F,EAAE,IAAI,OAAO,CAAC,aAAa,KAAK,KAAK,CAAC,IAAI,UAAU,CAAC,aAAa,IAAI,aAAa,KAAK,KAAK,CAAC,EAAE,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC;AACvI,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACvB,EAAE,OAAO,CAAC,6IAA6I,EAAE,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,8BAA8B,EAAE,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,wJAAwJ,EAAE,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,8BAA8B,EAAE,aAAa,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,yIAAyI,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK;AAC3rB,IAAI,OAAO,CAAC,iGAAiG,EAAE,aAAa,CAAC,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;AACzM,GAAG,CAAC,CAAC,+RAA+R,CAAC;AACrS,CAAC;;;;"}