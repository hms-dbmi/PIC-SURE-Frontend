{"version":3,"file":"GeneFilter-Cyp2KRCs.js","sources":["../../../.svelte-kit/adapter-node/chunks/GeneFilter.js"],"sourcesContent":["import { i as derived, w as writable, j as get } from \"./exports.js\";\nconst variantData = [\n  {\n    key: \"High Severity\",\n    children: [\n      \"splice_acceptor_variant\",\n      \"splice_donor_variant\",\n      \"stop_gained\",\n      \"frameshift_variant\",\n      \"stop_lost\",\n      \"start_lost\"\n    ]\n  },\n  {\n    key: \"Medium Severity\",\n    children: [\n      \"inframe_insertion\",\n      \"inframe_deletion\",\n      \"missense_variant\",\n      \"protein_altering_variant\"\n    ]\n  },\n  {\n    key: \"Low Severity\",\n    children: [\n      \"splice_region_variant\",\n      \"splice_donor_5th_base_variant\",\n      \"splice_donor_region_variant\",\n      \"splice_polypyrimidine_tract_variant\",\n      \"incomplete_terminal_codon_variant\",\n      \"start_retained_variant\",\n      \"stop_retained_variant\",\n      \"synonymous_variant\"\n    ]\n  }\n];\nconst severityKeys = variantData.map((sev) => sev.key);\nconst selectedGenes = writable([]);\nconst selectedFrequency = writable([]);\nconst selectedConsequence = writable([]);\nconst consequences = derived(\n  selectedConsequence,\n  ($c) => $c.filter((cons) => !severityKeys.includes(cons))\n);\nfunction populateFromGeneFilter(filter) {\n  selectedGenes.set(filter?.Gene_with_variant || []);\n  selectedConsequence.set(filter?.Variant_consequence_calculated || []);\n  selectedFrequency.set(filter?.Variant_frequency_as_text || []);\n}\nfunction clearGeneFilters() {\n  selectedGenes.set([]);\n  selectedFrequency.set([]);\n  selectedConsequence.set([]);\n}\nfunction addConsquence(consequence) {\n  selectedConsequence.set([...get(selectedConsequence), consequence]);\n}\nfunction removeConsequence(consequence) {\n  const filtered = get(selectedConsequence).filter((cons) => cons !== consequence);\n  selectedConsequence.set(filtered);\n}\nexport {\n  selectedFrequency as a,\n  selectedConsequence as b,\n  addConsquence as c,\n  consequences as d,\n  clearGeneFilters as e,\n  populateFromGeneFilter as p,\n  removeConsequence as r,\n  selectedGenes as s,\n  variantData as v\n};\n"],"names":[],"mappings":";;AACK,MAAC,WAAW,GAAG;AACpB,EAAE;AACF,IAAI,GAAG,EAAE,eAAe;AACxB,IAAI,QAAQ,EAAE;AACd,MAAM,yBAAyB;AAC/B,MAAM,sBAAsB;AAC5B,MAAM,aAAa;AACnB,MAAM,oBAAoB;AAC1B,MAAM,WAAW;AACjB,MAAM;AACN;AACA,GAAG;AACH,EAAE;AACF,IAAI,GAAG,EAAE,iBAAiB;AAC1B,IAAI,QAAQ,EAAE;AACd,MAAM,mBAAmB;AACzB,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AACxB,MAAM;AACN;AACA,GAAG;AACH,EAAE;AACF,IAAI,GAAG,EAAE,cAAc;AACvB,IAAI,QAAQ,EAAE;AACd,MAAM,uBAAuB;AAC7B,MAAM,+BAA+B;AACrC,MAAM,6BAA6B;AACnC,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,wBAAwB;AAC9B,MAAM,uBAAuB;AAC7B,MAAM;AACN;AACA;AACA;AACA,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC;AACjD,MAAC,aAAa,GAAG,QAAQ,CAAC,EAAE;AAC5B,MAAC,iBAAiB,GAAG,QAAQ,CAAC,EAAE;AAChC,MAAC,mBAAmB,GAAG,QAAQ,CAAC,EAAE;AAClC,MAAC,YAAY,GAAG,OAAO;AAC5B,EAAE,mBAAmB;AACrB,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC1D;AACA,SAAS,sBAAsB,CAAC,MAAM,EAAE;AACxC,EAAE,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,iBAAiB,IAAI,EAAE,CAAC;AACpD,EAAE,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,8BAA8B,IAAI,EAAE,CAAC;AACvE,EAAE,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,yBAAyB,IAAI,EAAE,CAAC;AAChE;AACA,SAAS,gBAAgB,GAAG;AAC5B,EAAE,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC;AACvB,EAAE,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC;AAC3B,EAAE,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC;AAC7B;AACA,SAAS,aAAa,CAAC,WAAW,EAAE;AACpC,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,mBAAmB,CAAC,EAAE,WAAW,CAAC,CAAC;AACrE;AACA,SAAS,iBAAiB,CAAC,WAAW,EAAE;AACxC,EAAE,MAAM,QAAQ,GAAG,GAAG,CAAC,mBAAmB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC;AAClF,EAAE,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC;AACnC;;;;"}