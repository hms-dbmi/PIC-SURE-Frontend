import{d as o,w as f}from"./entry.Df3FuYeh.js";import{g as c,a as l}from"./User.KscV_1bU.js";import{r as d}from"./scheduler.bui7uCNy.js";function y(t){const e=new Date(t),n=e.toLocaleString("default",{year:"numeric"}),r=e.toLocaleString("default",{month:"2-digit"}),a=e.toLocaleString("default",{day:"2-digit"});return n+"-"+r+"-"+a}function i(t){let e,n;try{const a=JSON.parse(t.query.query);e=a==null?void 0:a.query,a!=null&&a.commonAreaUUID&&(n={commonId:a==null?void 0:a.commonAreaUUID})}catch{e={}}return{uuid:t.uuid,user:t.user,name:t.name,archived:t.archived,metadata:t.metadata,query:e,federated:n,queryId:t.query.uuid,startTime:y(t.query.startTime),rawStartTime:t.query.startTime}}const s=f([]),g=o(s,t=>t.filter(e=>!e.archived).sort((e,n)=>n.rawStartTime-e.rawStartTime)),h=o(s,t=>t.filter(e=>e.archived));async function p(){const t=await c("picsure/dataset/named");s.set(t.map(i))}async function q(t){const e=d(s),n=e.findIndex(m=>m.uuid===t);if(n===-1)return Promise.reject("Could not find dataset in store.");const r=e[n],a={queryId:r==null?void 0:r.queryId,name:r==null?void 0:r.name,metadata:r==null?void 0:r.metadata,archived:!(r!=null&&r.archived)},u=await l(`picsure/dataset/named/${t}`,a);e[n]=i(u),s.set(e)}async function v(t){const e=d(s),n=e.findIndex(a=>a.uuid===t);if(n>-1)return e[n];const r=await c(`picsure/dataset/named/${t}`);return i(r)}const S={subscribe:s.subscribe,active:g,archived:h,loadDatasets:p,toggleArchived:q,getDataset:v};export{S as D};
