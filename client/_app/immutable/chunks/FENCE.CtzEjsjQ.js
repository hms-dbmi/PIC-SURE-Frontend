var c=Object.defineProperty;var p=(o,t,e)=>t in o?c(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var i=(o,t,e)=>p(o,typeof t!="symbol"?t+"":t,e);import{A as a}from"./AuthProviderRegistry.CoVZEDvP.js";import{p as u,l as d}from"./User.DxvYFzcG.js";class g extends a{constructor(e){super(e);i(this,"uri");i(this,"clientid");i(this,"idp");i(this,"authenticate",async e=>{const s=this.getResponseMap(e).get("code");if(!s)return!0;try{const r=await u("psama/authentication/fence",{code:s});return r!=null&&r.token?(await d(r.token),!1):!0}catch(r){return console.error("Login Error: ",r),!0}});i(this,"login",async(e,n)=>{let s="/";{s=this.getRedirectURI(),this.saveState(e,n,this.idp);const r=encodeURI(`${this.uri}/user/oauth2/authorize?response_type=code&scope=user+openid&client_id=${this.clientid}&redirect_uri=${s}&idp=${this.idp}`);window.location.href=r}});i(this,"logout",async()=>{throw new Error("Method not implemented.")});this.uri=e.uri,this.clientid=e.clientid,this.idp=e.idp}}export{g as default};
