import{d as o,w as l,g as d}from"./DlIBaGjY.js";import{g as m,j as i,p as g}from"./yAhaO9Md.js";function y(t){const e=new Date(t),n=e.toLocaleString("default",{year:"numeric"}),a=e.toLocaleString("default",{month:"2-digit"}),r=e.toLocaleString("default",{day:"2-digit"});return n+"-"+a+"-"+r}function c(t){let e,n;try{const r=JSON.parse(t.query.query);e=r==null?void 0:r.query,r!=null&&r.commonAreaUUID&&(n={commonId:r==null?void 0:r.commonAreaUUID})}catch{e={}}return{uuid:t.uuid,user:t.user,name:t.name,archived:t.archived,metadata:t.metadata,query:e,federated:n,queryId:t.query.uuid,startTime:y(t.query.startTime),rawStartTime:t.query.startTime}}const s=l([]),v=o(s,t=>t.filter(e=>!e.archived).sort((e,n)=>n.rawStartTime-e.rawStartTime)),D=o(s,t=>t.filter(e=>e.archived));async function I(){const t=await m(i.NamedDataSet);s.set(t.map(c))}async function S(t){const e=d(s),n=e.findIndex(f=>f.uuid===t);if(n===-1)return Promise.reject("Could not find dataset in store.");const a=e[n],r={queryId:a==null?void 0:a.queryId,name:a==null?void 0:a.name,metadata:a==null?void 0:a.metadata,archived:!(a!=null&&a.archived)},u=await g(`${i.NamedDataSet}/${t}`,r);e[n]=c(u),s.set(e)}async function w(t){const e=d(s),n=e.findIndex(r=>r.uuid===t);if(n>-1)return e[n];const a=await m(`${i.NamedDataSet}/${t}`);return c(a)}s.subscribe;export{v as a,D as b,w as g,I as l,S as t};
