import{w as d,g as c}from"./DlIBaGjY.js";import{g as w,P as a,d as l,p,c as g}from"./BRrMSDP5.js";const r=d(!1),t=d([]);async function u(){if(c(r))return;const s=await w(a.Connection);t.set(s),r.set(!0)}async function f(s){let e=c(t);e.length===0&&(await u(),e=c(t));const n=e.find(o=>o.uuid===s);if(n)return n;throw new Error("Connection not found.")}async function x(s){const n=(await g(a.Connection,[s])).content[0],o=c(t);o.push(n),t.set(o)}async function y(s){const n=(await p(a.Connection,[s]))[0],o=c(t),i=o.findIndex(C=>C.uuid===n.uuid);i===-1?o.push(n):o[i]=n,t.set(o)}async function h(s){const e=await f(s);await l(`${a.Connection}/${e.id}`);const n=c(t),o=n.findIndex(i=>i.uuid===s);o>-1&&(n.splice(o,1),t.set(n))}const I={subscribe:t.subscribe,connections:t,loadConnections:u,getConnection:f};export{I as C,x as a,t as c,h as d,f as g,u as l,y as u};
