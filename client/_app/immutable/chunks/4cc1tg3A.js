import{w as c,g as a}from"./DlIBaGjY.js";import{e as b,f as w,t as f}from"./yAhaO9Md.js";import{b as n}from"./CHRSknKA.js";import{g as x,S as o,c as S}from"./EJhFMS5q.js";import{f as y}from"./CwvcP1kx.js";import{s as E,a as R}from"./BtrPhJEK.js";const T=100,l=new Map,v=c(!1),C=c([]);c(Promise.resolve());const M=c(0);async function j(m){var u,p;b();try{l.size>=T&&l.clear();const r=JSON.stringify([m,a(E),a(R).map(e=>e.name),a(y).map(({uuid:e})=>e)]);if(l.has(r)){C.set(l.get(r));return}await a(w);const i=x(m,((p=(u=n)==null?void 0:u.results)==null?void 0:p.stats)||[]);C.set(i),Promise.allSettled(i.flatMap(o.list)).then(e=>{var t,s,g,h;e.some(o.rejected)?a(y).length!==0?f.error({description:(s=(t=n)==null?void 0:t.explorePage)==null?void 0:s.filterErrorText,closable:!1}):f.error({title:(h=(g=n)==null?void 0:g.explorePage)==null?void 0:h.queryErrorText}):l.set(r,i),v.set(e.some(P=>o.fullfiled(P)&&`${S([P.value])}`!="0"))});const d=i.find(e=>{var t,s;return e.key===((s=(t=n)==null?void 0:t.results)==null?void 0:s.totalStatKey)});d&&Promise.allSettled(o.list(d)).then(e=>{const t=e.filter(o.fullfiled).map(({value:s})=>s);M.set(S(t,!1))})}catch(r){console.error(r),f.error({title:"An error occured while loading patient counts. If this problem persists, please contact an administrator."})}}export{v as h,j as l,C as r,M as t};
