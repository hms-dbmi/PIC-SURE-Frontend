import{d as c,w as f,g as o}from"./DpyMT7OB.js";import{g as d,p as l}from"./BpV1Tt4c.js";function g(e){const t=new Date(e),s=t.toLocaleString("default",{year:"numeric"}),a=t.toLocaleString("default",{month:"2-digit"}),r=t.toLocaleString("default",{day:"2-digit"});return s+"-"+a+"-"+r}function i(e){let t,s;try{const r=JSON.parse(e.query.query);t=r==null?void 0:r.query,r!=null&&r.commonAreaUUID&&(s={commonId:r==null?void 0:r.commonAreaUUID})}catch{t={}}return{uuid:e.uuid,user:e.user,name:e.name,archived:e.archived,metadata:e.metadata,query:t,federated:s,queryId:e.query.uuid,startTime:g(e.query.startTime),rawStartTime:e.query.startTime}}const n=f([]),p=c(n,e=>e.filter(t=>!t.archived).sort((t,s)=>s.rawStartTime-t.rawStartTime)),q=c(n,e=>e.filter(t=>t.archived));async function v(){const e=await d("picsure/dataset/named");n.set(e.map(i))}async function I(e){const t=o(n),s=t.findIndex(m=>m.uuid===e);if(s===-1)return Promise.reject("Could not find dataset in store.");const a=t[s],r={queryId:a==null?void 0:a.queryId,name:a==null?void 0:a.name,metadata:a==null?void 0:a.metadata,archived:!(a!=null&&a.archived)},u=await l(`picsure/dataset/named/${e}`,r);t[s]=i(u),n.set(t)}async function w(e){const t=o(n),s=t.findIndex(r=>r.uuid===e);if(s>-1)return t[s];const a=await d(`picsure/dataset/named/${e}`);return i(a)}n.subscribe;export{p as a,q as b,w as g,v as l,I as t};
