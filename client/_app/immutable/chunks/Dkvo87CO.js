import{d as p,w as c,g as n}from"./DlIBaGjY.js";import{c as y,a as m,G as _}from"./DOfTSHX0.js";import{e as v,f as g,h as f,c as h,j as q}from"./BRrMSDP5.js";import{g as S,u as F}from"./fGQBOZLe.js";const G=[{key:"High Severity",children:["splice_acceptor_variant","splice_donor_variant","stop_gained","frameshift_variant","stop_lost","start_lost"]},{key:"Medium Severity",children:["inframe_insertion","inframe_deletion","missense_variant","protein_altering_variant"]},{key:"Low Severity",children:["splice_region_variant","splice_donor_5th_base_variant","splice_donor_region_variant","splice_polypyrimidine_tract_variant","incomplete_terminal_codon_variant","start_retained_variant","stop_retained_variant","synonymous_variant"]}],P=G.map(e=>e.key),u=c([]),l=c([]),i=c([]),x=p(i,e=>e.filter(t=>!P.includes(t)));function Q(){const e=n(u),t=n(l),s=n(x);return y({Gene_with_variant:e.length>0?e:void 0,Variant_consequence_calculated:s.length>0?s:void 0,Variant_frequency_as_text:t.length>0?t:void 0})}function R(e){u.set((e==null?void 0:e.Gene_with_variant)||[]),i.set((e==null?void 0:e.Variant_consequence_calculated)||[]),l.set((e==null?void 0:e.Variant_frequency_as_text)||[])}function b(){u.set([]),l.set([]),i.set([])}function H(e){i.set([...n(i),e])}function j(e){const t=n(i).filter(s=>s!==e);i.set(t)}const r=c([]);function z(){const e=n(r);return m(e)}function B(e){r.set(e.snpValues)}function D(){r.set([])}function N(e,t){const s=S(!1,t);return s.query.addCategoryFilter(e.search,[_.Heterozygous,_.Homozygous]),s.query=F(s.query),h(q.QuerySync,s)}async function I(e){v(),await n(g);const s=f().map(({uuid:a})=>N(e,a));return Promise.allSettled(s).then(a=>({count:a.filter(o=>o.status==="fulfilled").map(o=>o.value||0).reduce((o,d)=>o+d,0),errors:a.filter(o=>o.status!=="fulfilled").length})).catch(()=>({count:0,errors:1}))}function K(e){const t=n(r),s=t.findIndex(a=>a.search===e.search);s>=0?(t[s]=e,r.set(t)):r.set([...t,e])}function L(e){const s=n(r).filter(a=>a.search!==e.search);r.set(s)}export{K as a,u as b,D as c,L as d,l as e,H as f,I as g,i as h,x as i,b as j,B as k,Q as l,z as m,R as p,j as r,r as s,G as v};
