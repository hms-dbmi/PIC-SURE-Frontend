import{R as a,C as y,aq as z,ar as A,as as h,u as j,aj as m}from"./KPVYLOSR.js";function q(n,e,t){if(n==null)return e(void 0),t&&t(void 0),a;const r=y(()=>n.subscribe(e,t));return r.unsubscribe?()=>r.unsubscribe():r}const f=[];function k(n,e){return{subscribe:B(n,e).subscribe}}function B(n,e=a){let t=null;const r=new Set;function c(u){if(z(n,u)&&(n=u,t)){const o=!f.length;for(const s of r)s[1](),f.push(s,n);if(o){for(let s=0;s<f.length;s+=2)f[s][0](f[s+1]);f.length=0}}}function l(u){c(u(n))}function b(u,o=a){const s=[u,o];return r.add(s),r.size===1&&(t=e(c,l)||a),u(n),()=>{r.delete(s),r.size===0&&t&&(t(),t=null)}}return{set:c,update:l,subscribe:b}}function E(n,e,t){const r=!Array.isArray(n),c=r?[n]:n;if(!c.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const l=e.length<2;return k(t,(b,u)=>{let o=!1;const s=[];let p=0,d=a;const g=()=>{if(p)return;d();const i=e(r?s[0]:s,b,u);l?b(i):d=typeof i=="function"?i:a},w=c.map((i,_)=>q(i,x=>{s[_]=x,p&=~(1<<_),o&&g()},()=>{p|=1<<_}));return o=!0,g(),function(){A(w),d(),o=!1}})}function M(n){let e;return q(n,t=>e=t)(),e}function C(n){m===null&&h(),j(()=>{const e=y(n);if(typeof e=="function")return e})}function R(n){m===null&&h(),C(()=>()=>y(n))}export{R as a,E as d,M as g,C as o,k as r,q as s,B as w};
