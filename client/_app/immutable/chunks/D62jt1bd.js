import{d as R,w as d,g as r}from"./DlIBaGjY.js";import{g as p,P as i,d as g,p as m,c as f}from"./yAhaO9Md.js";function c(e){return{...e,privileges:e.privileges?e.privileges.map(s=>s.uuid):[]}}const u=d(!1),n=d([]),w=R(n,e=>e.map(s=>[s.name,s.uuid||""]),[]);async function v(){if(r(u))return;const e=await p(i.Role);n.set(e.map(c)),u.set(!0)}async function y(e){const t=r(n).find(a=>a.uuid===e);if(t)return t;const o=await p(`${i.Role}/${e}`);return c(o)}async function $(e){const s=await f(i.Role,[{...e,privileges:e.privileges.map(a=>({uuid:a}))}]),t=c(s.content[0]),o=r(n);o.push(t),n.set(o)}async function I(e){const s=await m(i.Role,[{...e,privileges:e.privileges.map(l=>({uuid:l}))}]),t=c(s.content[0]),o=r(n),a=o.findIndex(l=>l.uuid===t.uuid);a===-1?o.push(t):o[a]=t,n.set(o)}async function h(e){await g(`${i.Role}/${e}`);const s=r(n),t=s.findIndex(o=>o.uuid===e);t>-1&&(s.splice(t,1),n.set(s))}async function P(e){const s=await f(i.StudyAccess,e);if(s.status!==200)throw new Error("Failed to add manual role");return s}const S={subscribe:n.subscribe,roles:n,roleList:w,loadRoles:v,getRole:y};export{S as R,$ as a,P as b,h as d,y as g,v as l,n as r,I as u};
